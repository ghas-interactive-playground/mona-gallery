name: Export Secret Scanning Scan History to CSV

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  fetch-scan-history:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get install jq

      - name: Fetch Secret Scanning Scan History and Save to CSV
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET_SCANNING_TOKEN }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          echo "Fetching secret scanning scan history for repo $REPO_OWNER/$REPO_NAME..."

          curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/secret-scanning/scans" > scans.json

          echo "Parsing scan history JSON to CSV..."

          # Build CSV header
          echo "scan_category,type,status,started_at,completed_at,pattern_slug,pattern_scope" > scans.csv

          # Parse each section separately and combine into one CSV
          
          # Handle incremental scans
          jq -r '.incremental_scans[] | [
            "incremental",
            .type,
            .status,
            (."started_at" // ""),
            (."completed_at" // ""),
            "",
            ""
          ] | @csv' scans.json >> scans.csv

          # Handle backfill scans
          jq -r '.backfill_scans[] | [
            "backfill",
            .type,
            .status,
            (."started_at" // ""),
            (."completed_at" // ""),
            "",
            ""
          ] | @csv' scans.json >> scans.csv

          # Handle pattern update scans
          jq -r '.pattern_update_scans[] | [
            "pattern_update",
            .type,
            .status,
            (."started_at" // ""),
            (."completed_at" // ""),
            "",
            ""
          ] | @csv' scans.json >> scans.csv

          # Handle custom pattern backfill scans
          jq -r '.custom_pattern_backfill_scans[] | [
            "custom_pattern_backfill",
            .type,
            .status,
            (."started_at" // ""),
            (."completed_at" // ""),
            (."pattern_slug" // ""),
            (."pattern_scope" // "")
          ] | @csv' scans.json >> scans.csv

          echo "CSV file generated: scans.csv"

      - name: Upload CSV as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: secret-scanning-scan-history
          path: scans.csv
